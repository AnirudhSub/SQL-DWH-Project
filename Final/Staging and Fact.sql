create database Group6_Testing
create schema Landing
create schema Staging 
create schema DW
select * into Group6_Testing.dbo.CDW_SAPP_BRANCH from projectexample.dbo.CDW_SAPP_BRANCH 
select * into Group6_Testing.dbo.CDW_SAPP_CUSTOMER from projectexample.dbo.CDW_SAPP_CUSTOMER
select * into Group6_Testing.dbo.CDW_SAPP_D_CALENDAR from projectexample.dbo.CDW_SAPP_D_CALENDAR
select * into Group6_Testing.dbo.CDW_SAPP_F_SALES_BR_4382 from projectexample.dbo.CDW_SAPP_F_SALES_BR_4382
select * into Group6_Testing.dbo.CDW_SAPP_CDW_SAPP_F_SALES_BR_4383 from projectexample.dbo.CDW_SAPP_F_SALES_BR_4383
select * into Group6_Testing.dbo.CDW_SAPP_PRODUCT from projectexample.dbo.CDW_SAPP_PRODUCT 
select * into Group6_Testing.dbo.CDW_SAPP_SUPPLIER from projectexample.dbo.CDW_SAPP_SUPPLIER 



-------------------------FACT AND AGGREGATE--------------------
--DROP PROCEDURE IF EXISTS SALES_FACT
CREATE PROCEDURE SALES_FACT 
AS BEGIN
    IF OBJECT_ID(N'[DW].[CDW_SAPP_F_SALES]' , N'U') IS NULL
    BEGIN
    CREATE TABLE [DW].[CDW_SAPP_F_SALES] (
    CDW_XYZ_F_SALES_DSET_KEY NUMERIC(15),
    SALES_F_PERIOD_KEY DATE,
    SALES_F_CUSTOMER_Key NUMERIC(10),
    SALES_F_SUPPLIER_Key NUMERIC(10),
    SALES_F_BRANCH_CODE NUMERIC(9),
    SALES_F_BRANCH_NAME VARCHAR(25),
    SALES_F_PRODUCT_CODE NUMERIC(15),
    SALES_F_PRODUCT_NAME VARCHAR(30),
    SALES_SOLD_QTY NUMERIC(7),
    SALES_TOTAL_AMOUNT NUMERIC(8,2),
    CREATED_DATE DATETIME);
    END

    
    MERGE INTO [DW].[CDW_SAPP_F_SALES] AS Target
    USING [Staging].[CDW_SAPP_STG_SALES] AS Source
    ON Target.CDW_XYZ_F_SALES_DSET_KEY = Source.CDW_SALES_DSET_KEY
    WHEN MATCHED THEN
       UPDATE SET
           SALES_F_PERIOD_KEY = CONVERT(DATE, CONCAT(Source.SALES_F_PERIOD_KEY_DAY, '-', Source.SALES_F_PERIOD_KEY_MONTH, '-', Source.SALES_F_PERIOD_KEY_YEAR), 23),
           SALES_F_CUSTOMER_Key = Source.SALES_F_CUSTOMER_KEY,
           SALES_F_SUPPLIER_Key = Source.SALES_F_SUPPLIER_KEY,
           SALES_F_BRANCH_CODE = Source.SALES_F_BRANCH_CODE,
           SALES_F_BRANCH_NAME = Source.SALES_F_BRANCH_NAME,
           SALES_F_PRODUCT_CODE = Source.SALES_F_PRODUCT_CODE,
           SALES_F_PRODUCT_NAME = Source.SALES_F_PRODUCT_NAME,
           SALES_SOLD_QTY = Source.SALES_SOLD_QTY,
           SALES_TOTAL_AMOUNT = Source.SALES_TOTAL_AMOUNT,
           CREATED_DATE = Source.CREATED_DATE
    WHEN NOT MATCHED THEN
       INSERT (
           CDW_XYZ_F_SALES_DSET_KEY,
           SALES_F_PERIOD_KEY,
           SALES_F_CUSTOMER_Key,
           SALES_F_SUPPLIER_Key,
           SALES_F_BRANCH_CODE,
           SALES_F_BRANCH_NAME,
           SALES_F_PRODUCT_CODE,
           SALES_F_PRODUCT_NAME,
           SALES_SOLD_QTY,
           SALES_TOTAL_AMOUNT,
           CREATED_DATE
       ) VALUES (
           Source.CDW_SALES_DSET_KEY,
           CONVERT(DATE, CONCAT(Source.SALES_F_PERIOD_KEY_DAY, '-', Source.SALES_F_PERIOD_KEY_MONTH, '-', Source.SALES_F_PERIOD_KEY_YEAR), 23),
           Source.SALES_F_CUSTOMER_KEY,
           Source.SALES_F_SUPPLIER_KEY,
           Source.SALES_F_BRANCH_CODE,
           Source.SALES_F_BRANCH_NAME,
           Source.SALES_F_PRODUCT_CODE,
           Source.SALES_F_PRODUCT_NAME,
           Source.SALES_SOLD_QTY,
           Source.SALES_TOTAL_AMOUNT,
           Source.CREATED_DATE
       );
END;
EXEC SALES_FACT

--DROP PROCEDURE IF EXISTS AGGREGATE_FACT
CREATE PROCEDURE AGGREGATE_FACT
AS 
BEGIN
    IF OBJECT_ID(N'[DW].[CDW_SAPP_F_AGG_DATA]' , N'U') IS NULL
    BEGIN
    CREATE TABLE [DW].[CDW_SAPP_F_AGG_DATA] (
       CDW_SALES_AGG_DSET_KEY NUMERIC(15),
       BRANCH_CODE NUMERIC(15),
       BRANCH_NAME VARCHAR(25),
       PRODUCT_CODE NUMERIC(15),
       PRODUCT_NAME VARCHAR(30),
       TOTAL_QUANTITY NUMERIC(7),
       TOTAL_AMOUNT NUMERIC(8,2),
       CREATED_DATE DATE);
      END
    MERGE INTO [DW].[CDW_SAPP_F_AGG_DATA] AS trg
    USING (
       SELECT
           ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS CDW_SALES_AGG_DSET_KEY,
           SALES_F_BRANCH_CODE,
           SALES_F_BRANCH_NAME,
           SALES_F_PRODUCT_CODE,
           SALES_F_PRODUCT_NAME,
           SUM(SALES_SOLD_QTY) AS TOTAL_QUANTITY,
           SUM(SALES_TOTAL_AMOUNT) AS TOTAL_AMOUNT,
           GETDATE() AS CREATED_DATE
       FROM [DW].[CDW_SAPP_F_SALES]
       GROUP BY SALES_F_BRANCH_CODE, SALES_F_BRANCH_NAME, SALES_F_PRODUCT_CODE, SALES_F_PRODUCT_NAME
    ) AS scr
    ON trg.CDW_SALES_AGG_DSET_KEY = scr.CDW_SALES_AGG_DSET_KEY
    WHEN NOT MATCHED THEN
       INSERT (
           CDW_SALES_AGG_DSET_KEY,
           BRANCH_CODE,
           BRANCH_NAME,
           PRODUCT_CODE,
           PRODUCT_NAME,
           TOTAL_QUANTITY,
           TOTAL_AMOUNT,
           CREATED_DATE
       )
       VALUES (
           scr.CDW_SALES_AGG_DSET_KEY,
           scr.SALES_F_BRANCH_CODE,
           scr.SALES_F_BRANCH_NAME,
           scr.SALES_F_PRODUCT_CODE,
           scr.SALES_F_PRODUCT_NAME,
           scr.TOTAL_QUANTITY,
           scr.TOTAL_AMOUNT,
           scr.CREATED_DATE
       );
END;

EXEC AGGREGATE_FACT